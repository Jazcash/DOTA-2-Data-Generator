$upaxis Y

$modelname "<ITEMTEST_REPLACE_MDLABSPATH>"

$surfaceprop "default"

// This will add the contents of a separate file called "courier_name_hitbox.qci" to the compile process.  Theres info on how to create a hitbox.qci on the dev wiki
//$include courier_name_hitbox.qci

// These are the 3 required attachments for a courier.  In this case, you should replace "courier_root" with the name of an appropriate bone from your skeleton
$attachment "attach_eye_l" "<ITEMTEST_REPLACE_ATTACHMENT1>" 0.00 0.00 0.00 rotate 0 0 0
$attachment "attach_eye_r" "<ITEMTEST_REPLACE_ATTACHMENT2>" 0.00 0.00 0.00 rotate 0 0 0
$attachment "attach_hitloc" "<ITEMTEST_REPLACE_ATTACHMENT0>" 0.00 0.00 0.00 rotate 0 0 0

$bodygroup "default"
{
       studio "<ITEMTEST_REPLACE_LOD0>"
}

<ITEMTEST_REPLACE_LOD1_OPTIONALBLOCK>

<ITEMTEST_REPLACE_TEXTUREGROUP_OPTIONALBLOCK>

// Pose parameters give access to some piece of defined animation to the code.  In this case, we will use it to let the code influence the couriers pose when they change direction
$poseparameter turn -1.00 1.00


// Below is a list of all the animations included for this courier.
// Some are a little more complex than others.
// The parts labeled "event" are queues for audio.  In the run example, it is playing the footstep sound on frames 2,8,10 and 16. simply remove the events if you require no sound

$sequence courier_idle "<ITEMTEST_REPLACE_ANIM0>" loop ACT_DOTA_IDLE 1
<ITEMTEST_COMMENT_IF_NO_ANIM3>$sequence courier_idle_rare "<ITEMTEST_REPLACE_ANIM3>" loop ACT_DOTA_IDLE_RARE 1
$sequence courier_death "<ITEMTEST_REPLACE_ANIM2>" ACT_DOTA_DIE 1
<ITEMTEST_COMMENT_IF_NO_ANIM5>$sequence courier_capture "<ITEMTEST_REPLACE_ANIM5>" loop ACT_DOTA_CAPTURE 3
<ITEMTEST_COMMENT_IF_NO_ANIM6>$sequence courier_capture_rare "<ITEMTEST_REPLACE_ANIM6>" loop ACT_DOTA_CAPTURE 1

<ITEMTEST_COMMENT_IF_ANIM8>$sequence courier_run "<ITEMTEST_REPLACE_ANIM1>" loop ACT_DOTA_RUN 1
<ITEMTEST_COMMENT_IF_NO_ANIM7>$sequence courier_run "<ITEMTEST_REPLACE_ANIM1>" loop addlayer "courier_turns" ACT_DOTA_RUN 1
//$sequence courier_run_rare "<ITEMTEST_REPLACE_ANIM4>" loop addlayer "courier_turns" ACT_DOTA_RUN 1
<ITEMTEST_COMMENT_IF_NO_ANIM10>$sequence courier_run_haste "<ITEMTEST_REPLACE_ANIM10>" loop ActivityModifier haste ACT_DOTA_RUN 1 

// Below is the definition of the turn layer.
// First we start by creating 3 poses
// The 3 "animations" (center, left, right) are actually just single frame poses.  Center is usually the 0 frame of the run animation, left and right are poses based on the 'center' frame to give the illusion of a left or right turn.
// 'subtract' is defining each animation as the difference in pose between itself and the center pose
<ITEMTEST_COMMENT_IF_NO_ANIM7>$sequence center_pose "<ITEMTEST_REPLACE_ANIM7>" frame 0 0
<ITEMTEST_COMMENT_IF_NO_ANIM8>$sequence left_pose "<ITEMTEST_REPLACE_ANIM8>" frame 0 0
<ITEMTEST_COMMENT_IF_NO_ANIM9>$sequence right_pose "<ITEMTEST_REPLACE_ANIM9>" frame 0 0
<ITEMTEST_COMMENT_IF_NO_ANIM7>$animation courier_turn_center "<ITEMTEST_REPLACE_ANIM7>" subtract center_pose 0
<ITEMTEST_COMMENT_IF_NO_ANIM8>$animation courier_turn_left "<ITEMTEST_REPLACE_ANIM8>" subtract center_pose 0
<ITEMTEST_COMMENT_IF_NO_ANIM9>$animation courier_turn_right "<ITEMTEST_REPLACE_ANIM9>" subtract center_pose 0

// The turn is comprised of the 3 poses we defined above all connected together.  
// 'blendwidth' tells the sequence it is a combination of the 3 specified animations
// 'blend' tells it which pose parameter to label it as, in this case "turn"
// 'delta' signifies to the engine that this sequence is an additive layer, rather than completely stomping whatever animation it is added to.
<ITEMTEST_COMMENT_IF_NO_ANIM7>$sequence courier_turns {
<ITEMTEST_COMMENT_IF_NO_ANIM7>  courier_turn_left courier_turn_center courier_turn_right
<ITEMTEST_COMMENT_IF_NO_ANIM7>  blendwidth 3
<ITEMTEST_COMMENT_IF_NO_ANIM7>  blend turn -1.000000 1.000000
<ITEMTEST_COMMENT_IF_NO_ANIM7>  delta
<ITEMTEST_COMMENT_IF_NO_ANIM7>
<ITEMTEST_COMMENT_IF_NO_ANIM7>}

$skinnedlods