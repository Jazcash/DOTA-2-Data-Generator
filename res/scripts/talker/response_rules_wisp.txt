criterion "Iswisp" "classname" "npc_dota_hero_wisp" weight 5 required
criterion "IsEnemywisp" "targetclassname" "npc_dota_hero_wisp" weight 5 required
criterion "IsAllywisp" "nearby_ally" "npc_dota_hero_wisp" weight 5 required

Response wisp_Spawn
{
	scene "scenes/wisp/wisp_spawn_respawn.vcd" nodelay noscene 
}

Rule wisp_Spawn_Rule
{
	criteria Spawn Iswisp 
	response wisp_Spawn
}

Response wisp_CustomIsGameStart
{
	scene "scenes/wisp/wisp_battlebegins.vcd" nodelay noscene 
}

Rule wisp_CustomIsGameStart_Rule
{
	criteria Custom Iswisp IsGameStart
	response wisp_CustomIsGameStart
}

Response wisp_KillIsFirstBlood
{
	scene "scenes/wisp/wisp_firstblood.vcd" nodelay noscene 
}

Rule wisp_KillIsFirstBlood_Rule
{
	criteria Kill Iswisp IsFirstBlood
	response wisp_KillIsFirstBlood
}

Response wisp_Kill
{
	scene "scenes/wisp/wisp_kill.vcd" nodelay noscene 
}

Rule wisp_Kill_Rule
{
	criteria Kill Iswisp 
	response wisp_Kill
}

Response wisp_KillChance_10%
{
	scene "scenes/wisp/wisp_laugh.vcd" nodelay noscene 
}

Rule wisp_KillChance_10%_Rule
{
	criteria Kill Iswisp Chance_10%
	response wisp_KillChance_10%
}

Response wisp_Move
{
	scene "scenes/wisp/wisp_move.vcd" nodelay noscene 
}

Rule wisp_Move_Rule
{
	criteria Move Iswisp 
	response wisp_Move
}

Response wisp_Attack
{
	scene "scenes/wisp/wisp_attack.vcd" nodelay noscene 
}

Rule wisp_Attack_Rule
{
	criteria Attack Iswisp 
	response wisp_Attack
}

Response wisp_LevelUp
{
	scene "scenes/wisp/wisp_levelup.vcd" nodelay noscene 
}

Rule wisp_LevelUp_Rule
{
	criteria LevelUp Iswisp 
	response wisp_LevelUp
}

Response wisp_AllyNearIsAllyEnigmaEarlyGame
{
	scene "scenes/wisp/wisp_ally.vcd" nodelay noscene speakonce
}

Rule wisp_AllyNearIsAllyEnigmaEarlyGame_Rule
{
	criteria AllyNear Iswisp IsAllyEnigma EarlyGame
	response wisp_AllyNearIsAllyEnigmaEarlyGame
}

Response wisp_AllyNearIsAllyChaos_KnightEarlyGame
{
	scene "scenes/wisp/wisp_ally.vcd" nodelay noscene speakonce
}

Rule wisp_AllyNearIsAllyChaos_KnightEarlyGame_Rule
{
	criteria AllyNear Iswisp IsAllyChaos_Knight EarlyGame
	response wisp_AllyNearIsAllyChaos_KnightEarlyGame
}

Response wisp_AllyNearIsAllyKeeper_of_the_Light
{
	scene "scenes/wisp/wisp_ally.vcd" nodelay noscene speakonce
}

Rule wisp_AllyNearIsAllyKeeper_of_the_Light_Rule
{
	criteria AllyNear Iswisp IsAllyKeeper_of_the_Light
	response wisp_AllyNearIsAllyKeeper_of_the_Light
}

Response wisp_LastHit
{
	scene "scenes/wisp/wisp_lasthit.vcd" nodelay noscene 
}

Rule wisp_LastHit_Rule
{
	criteria LastHit Iswisp 
	response wisp_LastHit
}

Response wisp_Death
{
	scene "scenes/wisp/wisp_death.vcd" nodelay noscene 
}

Rule wisp_Death_Rule
{
	criteria Death Iswisp 
	response wisp_Death
}

Response wisp_DeathIsReincarnating
{
	scene "scenes/wisp/wisp_fastres.vcd" nodelay noscene 
}

Rule wisp_DeathIsReincarnating_Rule
{
	criteria Death Iswisp IsReincarnating
	response wisp_DeathIsReincarnating
}

Response wisp_Respawn
{
	scene "scenes/wisp/wisp_spawn_respawn.vcd" nodelay noscene 
}

Rule wisp_Respawn_Rule
{
	criteria Respawn Iswisp 
	response wisp_Respawn
}

Response wisp_PurchaseIsExpensiveItem
{
	scene "scenes/wisp/wisp_purchase_expensive.vcd" nodelay noscene speakonce
	scene "scenes/wisp/wisp_purchase_expensive.vcd" nodelay noscene speakonce
	scene "scenes/wisp/wisp_purchase_expensive.vcd" nodelay noscene speakonce
}

Rule wisp_PurchaseIsExpensiveItem_Rule
{
	criteria Purchase Iswisp IsExpensiveItem
	response wisp_PurchaseIsExpensiveItem
}

Response wisp_PurchaseIsUltimateScepter
{
	scene "scenes/wisp/wisp_purchase_scepter.vcd" nodelay noscene speakonce
}

Rule wisp_PurchaseIsUltimateScepter_Rule
{
	criteria Purchase Iswisp IsUltimateScepter
	response wisp_PurchaseIsUltimateScepter
}

Response wisp_PurchaseIsBlinkDagger
{
	scene "scenes/wisp/wisp_purchase_scepter.vcd" nodelay noscene speakonce
}

Rule wisp_PurchaseIsBlinkDagger_Rule
{
	criteria Purchase Iswisp IsBlinkDagger
	response wisp_PurchaseIsBlinkDagger
}

Response wisp_Bottling
{
	scene "scenes/wisp/wisp_purchase_scepter.vcd" nodelay noscene 
}

Rule wisp_Bottling_Rule
{
	criteria Bottling Iswisp 
	response wisp_Bottling
}

Response wisp_Deny
{
	scene "scenes/wisp/wisp_deny.vcd" nodelay noscene 
}

Rule wisp_Deny_Rule
{
	criteria Deny Iswisp 
	response wisp_Deny
}

Response wisp_Immortality
{
	scene "scenes/wisp/wisp_imort.vcd" nodelay noscene 
}

Rule wisp_Immortality_Rule
{
	criteria Immortality Iswisp 
	response wisp_Immortality
}

Response wisp_PowerupIsPowerupHaste
{
	scene "scenes/wisp/wisp_all_runes_pickup.vcd" nodelay noscene 
}

Rule wisp_PowerupIsPowerupHaste_Rule
{
	criteria Powerup Iswisp IsPowerupHaste
	response wisp_PowerupIsPowerupHaste
}

Response wisp_PowerupIsPowerupDoubleDamage
{
	scene "scenes/wisp/wisp_all_runes_pickup.vcd" nodelay noscene 
}

Rule wisp_PowerupIsPowerupDoubleDamage_Rule
{
	criteria Powerup Iswisp IsPowerupDoubleDamage
	response wisp_PowerupIsPowerupDoubleDamage
}

Response wisp_PowerupIsPowerupRegeneration
{
	scene "scenes/wisp/wisp_all_runes_pickup.vcd" nodelay noscene 
}

Rule wisp_PowerupIsPowerupRegeneration_Rule
{
	criteria Powerup Iswisp IsPowerupRegeneration
	response wisp_PowerupIsPowerupRegeneration
}

Response wisp_PowerupIsPowerupIllusion
{
	scene "scenes/wisp/wisp_all_runes_pickup.vcd" nodelay noscene 
}

Rule wisp_PowerupIsPowerupIllusion_Rule
{
	criteria Powerup Iswisp IsPowerupIllusion
	response wisp_PowerupIsPowerupIllusion
}

Response wisp_PowerupIsPowerupInvisibility
{
	scene "scenes/wisp/wisp_all_runes_pickup.vcd" nodelay noscene 
}

Rule wisp_PowerupIsPowerupInvisibility_Rule
{
	criteria Powerup Iswisp IsPowerupInvisibility
	response wisp_PowerupIsPowerupInvisibility
}

Response wisp_CooldownLittleNag
{
	scene "scenes/wisp/wisp_no_mana_not_yet01.vcd" nodelay noscene 
}

Rule wisp_CooldownLittleNag_Rule
{
	criteria Cooldown Iswisp LittleNag
	response wisp_CooldownLittleNag
}

Response wisp_CooldownMediumNag
{
	scene "scenes/wisp/wisp_no_mana_not_yet02.vcd" nodelay noscene 
}

Rule wisp_CooldownMediumNag_Rule
{
	criteria Cooldown Iswisp MediumNag
	response wisp_CooldownMediumNag
}

Response wisp_CooldownSuperNag
{
	scene "scenes/wisp/wisp_no_mana_not_yet03.vcd" nodelay noscene 
}

Rule wisp_CooldownSuperNag_Rule
{
	criteria Cooldown Iswisp SuperNag
	response wisp_CooldownSuperNag
}

Response wisp_NoManaLittleNag
{
	scene "scenes/wisp/wisp_no_mana_not_yet01.vcd" nodelay noscene 
}

Rule wisp_NoManaLittleNag_Rule
{
	criteria NoMana Iswisp LittleNag
	response wisp_NoManaLittleNag
}

Response wisp_NoManaMediumNag
{
	scene "scenes/wisp/wisp_no_mana_not_yet02.vcd" nodelay noscene 
}

Rule wisp_NoManaMediumNag_Rule
{
	criteria NoMana Iswisp MediumNag
	response wisp_NoManaMediumNag
}

Response wisp_NoManaSuperNag
{
	scene "scenes/wisp/wisp_no_mana_not_yet03.vcd" nodelay noscene 
}

Rule wisp_NoManaSuperNag_Rule
{
	criteria NoMana Iswisp SuperNag
	response wisp_NoManaSuperNag
}

Response wisp_Thanks
{
	scene "scenes/wisp/wisp_thanks.vcd" nodelay noscene 
}

Rule wisp_Thanks_Rule
{
	criteria Thanks Iswisp 
	response wisp_Thanks
}

Response wisp_Pain
{
	scene "scenes/wisp/wisp_under_attack.vcd" nodelay noscene 
}

Rule wisp_Pain_Rule
{
	criteria Pain Iswisp 
	response wisp_Pain
}

Response wisp_InTheBag
{
	scene "scenes/wisp/wisp_inthebag.vcd" nodelay noscene 
}

Rule wisp_InTheBag_Rule
{
	criteria InTheBag Iswisp 
	response wisp_InTheBag
}

Response wisp_Defeat
{
	scene "scenes/wisp/wisp_lose.vcd" nodelay noscene 
}

Rule wisp_Defeat_Rule
{
	criteria Defeat Iswisp 
	response wisp_Defeat
}

Response wisp_Victory
{
	scene "scenes/wisp/wisp_win.vcd" nodelay noscene 
}

Rule wisp_Victory_Rule
{
	criteria Victory Iswisp 
	response wisp_Victory
}

Response wisp_EmoteIsEmoteLaugh
{
	scene "scenes/wisp/wisp_laugh.vcd" nodelay noscene 
}

Rule wisp_EmoteIsEmoteLaugh_Rule
{
	criteria Emote Iswisp IsEmoteLaugh
	response wisp_EmoteIsEmoteLaugh
}

Response wisp_ItemDrop
{
	scene "scenes/wisp/wisp_thanks.vcd" nodelay noscene 
}

Rule wisp_ItemDrop_Rule
{
	criteria ItemDrop Iswisp 
	response wisp_ItemDrop
}

Response wisp_Select
{
	scene "scenes/wisp/wisp_thanks.vcd" nodelay noscene 
	scene "scenes/wisp/wisp_battlebegins.vcd" nodelay noscene 
}

Rule wisp_Select_Rule
{
	criteria Select Iswisp 
	response wisp_Select
}

